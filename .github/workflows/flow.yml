
name: Dynamic Flow Test.

on:
  push:
    branches:
      - v03_wip

  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

env:
  WHICH_TEST: dynamic_flow

jobs:
  strategy:
    name: Flow test
    timeout-minutes: 30
    matrix:
       which_test: [ static_flow, flakey_flow, dynamic_flow ]
       pyver: [ 3.6, 3.7, 3.8, 3.9, 3.10 ]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.pyver }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyver }}
    - name: Install dependencies
      run: |
        pip3 install .
        travis/flow_autoconfig.sh
        travis/ssh_localhost.sh
         
    - name: Setup ${{ matrix.which_test }} test.
      run: |
        cd ${HOME}; pwd; ls ; 
        echo hoho
        cd ${HOME}/sr_insects/${matrix.which_test}; ./flow_setup.sh

    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    # https://github.com/marketplace/actions/debugging-with-tmate
    # 
    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
    #  #if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

    - name: Limit ${{ matrix.which_test }} test.
      run: |
        cd ${HOME}/sr_insects/${matrix.which_test}; ./flow_limit.sh

    - name: Check results of ${{ matrix.which_test }} test.
      run: |
        cd ${HOME}/sr_insects/${matrix.which_test}; ./flow_check.sh
        
    - name: Save run artifacts
      if: always()
      uses: actions/upload-artifact@v2
      continue-on-error: true
      with:
        name: sr3_${{ matrix.which_test }}_logs_${{ github.sha }}
        path: ~/.cache/sr3/log/
